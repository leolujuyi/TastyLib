sudo: required

language: cpp

os:
  - linux

matrix:
  include:
    # gcc
    - env: BUILD_TYPE=Debug
      compiler: gcc
    - env: BUILD_TYPE=Release
      compiler: gcc
    # clang
    - env: BUILD_TYPE=Debug
      compiler: clang
    - env: BUILD_TYPE=Release
      compiler: clang
    # coveralls
    - env: BUILD_TYPE=Debug GCOV_FLAG='--coverage'
      compiler: gcc
      cache:
        - pip
      after_success:
        - pip install --user cpp-coveralls
        - coveralls -r .. --gcov-options '\-lp' -e build/CMakeFiles -e thirdparty -e test -e src -e include/tastylib/internal -e include/tastylib/util

branches:
  only:
    - master
    - /^(dev)|(dev_.*)$/

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.7
    packages:
      - gcc-4.9
      - g++-4.9
      - clang-3.7

before_install:
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.9 90
  - if [ "$CXX" = "g++" ]; then gcov --version; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
  - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
  - echo ${PATH}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

before_script:
  - mkdir build && cd build
  - git submodule init
  - git submodule update
  - cmake
    -DTASTYLIB_BUILD_TEST=ON
    -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    -DCMAKE_CXX_FLAGS=$GCOV_FLAG
    -DCMAKE_VERBOSE_MAKEFILE=ON
    ..

script:
  - make -j
  - ctest --verbose
